{"version":3,"sources":["assets/logo.svg","assets/github-background.svg","pages/Dashboard/styles.ts","services/api.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","Title","styled","h1","Form","form","props","hasError","css","shade","Error","span","Repositories","div","api","axios","create","baseURL","Dashboard","useState","inputError","setInputError","newRepo","setNewRepo","storedRepos","localStorage","getItem","JSON","parse","repositories","setRepositories","e","a","preventDefault","get","response","find","r","id","data","useEffect","setItem","stringify","src","logoImg","alt","style","color","onSubmit","placeholder","value","onChange","target","type","map","key","to","full_name","owner","avatar_url","login","description","size","Header","main","RepositoryInfo","Issues","Repository","params","useRouteMatch","issues","setIssues","selectedRepo","setSelectedRepo","Promise","all","repository","issuesLoaded","loadData","selRep","st","stargazers_count","forks_count","open_issues_count","i","href","html_url","rel","title","user","Routes","path","exact","component","createGlobalStyle","githubBackground","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a51f89f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background.fe82ec00.svg\";","import styled, { css } from 'styled-components'\nimport { shade } from 'polished'\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3A3A3A;\n  max-width: 433px;\n  line-height: 56px;\n\n  margin-top: 80px;\n  margin-bottom: 40px;\n`\n\ninterface FormProps {\n  hasError: boolean\n}\nexport const Form = styled.form<FormProps>`\n  max-width: 700px;\n\n  display: flex;\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n    border: 1px solid #fff;\n    border-right: 0;\n    /* basicamente para passar os parametros  */\n    ${(props) => props.hasError && css`\n      border-color: #c53030;\n    `}\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n  button {\n    width: 210px;\n    background: #04D361;\n    border: 0;\n    border-radius: 0px 5px 5px 0px;\n\n    color: #fff;\n    font-weight: bold;\n\n    transition: background-color 0.1s;\n    &:hover {\n      background-color: ${shade(0.2, '#04D361')};\n    }\n  }\n`\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n`\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n\n    transition: transform 0.2s;\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      border-radius: 50%;\n      width: 64px;\n      height: 64px;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3D3D4D;\n      }\n      p {\n        font-size: 18px;\n        color: #A8A8B3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #C9C9D4;\n    }\n  }\n`\n","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/'\n})\n\nexport default api\n","import React, { useState, useEffect, FormEvent } from 'react';\nimport { Link } from 'react-router-dom'\nimport { FiChevronRight } from 'react-icons/fi'\n\nimport { Title, Form, Repositories, Error } from './styles'\n\nimport logoImg from '../../assets/logo.svg'\nimport api from '../../services/api'\n\ninterface IrepoDTO {\n  id: number\n  name: string\n  full_name: string\n  private: boolean\n  owner: {\n    login: string\n    id: number\n    avatar_url: string\n    url: string\n  }\n  html_url: string\n  description: string\n  homepage: string\n  language: string\n  forks: number\n  open_issues: number\n}\nconst Dashboard: React.FC = () => {\n  const [inputError, setInputError] = useState('')\n  const [newRepo, setNewRepo] = useState('')\n  const [repositories, setRepositories] = useState<IrepoDTO[]>(\n    () => {\n      const storedRepos = localStorage.getItem('@GithubExplorer:respositories')\n      if (storedRepos) {\n        return JSON.parse(storedRepos)\n      } else {\n        return []\n      }\n    }\n  )\n\n  useEffect(() => {\n    localStorage.setItem('@GithubExplorer:respositories', JSON.stringify(repositories))\n  }, [repositories])\n\n  async function handleAddRepository(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n    if (!newRepo) {\n      setInputError('Digite um valor para para pesquisa 游때')\n      return\n    }\n    try {\n      const response = await api.get<IrepoDTO>(`repos/${newRepo}`)\n      const exists = repositories.find(r => r.id === response.data.id)\n\n      if (exists) {\n        setInputError('Repo j치 listado!')\n      } else {\n        setRepositories([...repositories, response.data])\n        setNewRepo('')\n        setInputError('')\n      }\n    } catch (error) {\n      setInputError('Reposit칩rio n칚o encontrado! 游뱂')\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"logo do Github Explore\" />\n      {/* {repositories.map(r => (<p>{r.id}</p>))} */}\n      <Title>Explore reposit칩rios no Github.</Title>\n      <p style={{color: \"#888\"}}>ex. \"LFerronato/ES-Trader_Site\"</p>\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          placeholder=\"Digite o nome do reposit칩rio\"\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n      {inputError && <Error>{inputError}</Error>}\n      <Repositories>\n        {repositories.map(r => (\n          <Link key={r.id} to={`/repositories/${r.full_name}`} >\n            <img\n              src={r.owner.avatar_url}\n              alt={r.owner.login}\n            />\n            <div>\n              <strong>{r.full_name}</strong>\n              <p>{r.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n\n      </Repositories>\n    </>\n  )\n}\n\nexport default Dashboard;\n","import styled from 'styled-components'\n\n\nexport const Header = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n\n    color: #a8a8b3;\n    transition: color 0.2s;\n    &:hover {\n      color: #666;\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`\nexport const RepositoryInfo = styled.div`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n    justify-content:right;\n    img{\n      height: 128px;\n      width: 128px;\n      border-radius: 50%;\n      margin-right: 10px;\n    }\n    div {\n      strong {\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #737380;\n        margin-top: 16px;\n      }\n    }\n  }\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n      strong {\n        display: block;\n        font-size: 36px;\n\n        color: #3d3d4d\n      }\n\n      span{\n        display: block;\n        margin-top: 4px;\n        color: #6c6c80;\n      }\n    }\n  }\n`\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n\n    transition: transform 0.2s;\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3D3D4D;\n      }\n      p {\n        font-size: 18px;\n        color: #A8A8B3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #C9C9D4;\n    }\n  }\n`\n","import React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi'\nimport api from '../../services/api'\n\nimport logoImg from '../../assets/logo.svg'\n\nimport { Header, RepositoryInfo, Issues } from './styles'\n\ninterface RepositoryParams {\n  repository: string\n}\ninterface IssueDTO {\n  id: number\n  html_url: string\n  title: string\n  user: {\n    login: string\n  }\n}\n\ninterface IrepoDTO {\n  id: number\n  name: string\n  full_name: string\n  private: boolean\n  owner: {\n    login: string\n    id: number\n    avatar_url: string\n    url: string\n  }\n  html_url: string\n  description: string\n  homepage: string\n  language: string\n  forks_count: number\n  open_issues_count: number\n  stargazers_count: number\n}\nconst Repository: React.FC = () => {\n  const { params } = useRouteMatch<RepositoryParams>()\n  // const selectedRepo = {\n  //   description: \"A declarative, efficient, and flexible JavaScript library for building user interfaces.\",\n  //   full_name: \"facebook/react\",\n  //   homepage: \"https://reactjs.org\",\n  //   html_url: \"https://github.com/facebook/react\",\n  //   id: 10270250,\n  //   language: \"JavaScript\",\n  //   name: \"react\",\n  //   owner: {\n  //     avatar_url: \"https://avatars3.githubusercontent.com/u/69631?v=4\",\n  //     login: \"facebook\"\n  //   },\n  //   forks_count: 19877,\n  //   open_issues_count: 1038,\n  //   stargazers_count: 89761\n  // }\n  const [issues, setIssues] = useState<IssueDTO[]>([])\n  const [selectedRepo, setSelectedRepo] = useState<IrepoDTO | null>(null)\n\n  useEffect(() => {\n    async function loadData(): Promise<void> {\n      const [issuesLoaded] = await Promise.all([\n        api.get<IssueDTO[]>(`repos/${params.repository}/issues`)\n      ])\n      setIssues(issuesLoaded.data)\n    }\n    loadData()\n\n    const storedRepos = localStorage.getItem('@GithubExplorer:respositories')\n    if (storedRepos) {\n      const Repos: IrepoDTO[] = JSON.parse(storedRepos)\n      const selRep = Repos.find((st: IrepoDTO) => st.full_name === params.repository)\n      if (selRep) setSelectedRepo(selRep)\n    }\n  }, [params.repository])\n\n  return (\n    <>\n      <Header>\n        <img src={logoImg} alt=\"logo do Github Explore\" />\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n            Voltar\n          </Link>\n      </Header>\n      {selectedRepo && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={selectedRepo.owner.avatar_url}\n              alt={selectedRepo.owner.login}\n            />\n            <div>\n              <strong>{selectedRepo.full_name}</strong>\n              <p>{selectedRepo.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{selectedRepo.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{selectedRepo.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{selectedRepo.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n      <Issues>\n        {issues.map(i => (\n          <a key={i.id} target=\"_blank\" href={i.html_url} rel=\"noopener noreferrer\">\n            <div>\n              <strong>{i.title}</strong>\n              <p>{i.user.login}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n\n      </Issues>\n    </>\n  );\n}\n\nexport default Repository;\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Repository from '../pages/Repository'\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path='/' exact component={Dashboard} />\n    <Route path='/repositories/:repository+' exact component={Repository} />\n  </Switch>\n)\n\nexport default Routes\n","import { createGlobalStyle } from 'styled-components'\nimport githubBackground from '../assets/github-background.svg'\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body{\n    background: #E5E5E5 url(${githubBackground}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 760px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport Routes from './routes'\n\nimport GlobalStyle from './styles/global'\nconst App = () =>\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}